#include "Encoder.h"
#include "HuffmanTree.h"
#include <iostream>
#include <bitset>

//using namespace std;

int main()
{
    std::vector<int> vect = 
    {
        0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25
    };

    std::shared_ptr<std::vector<int>> frequencies = std::make_shared<std::vector<int>>(vect);

    Encoder encoder = Encoder(frequencies);

    std::string str = "going";
    std::string s = encoder.Decode(encoder.Encode(str));
    std::cout << "decoded string is: " << s << std::endl;

    str = "test";
    s = encoder.Decode(encoder.Encode(str));
    std::cout << "decoded string is: " << s << std::endl;

    str = "terry";
    s = encoder.Decode(encoder.Encode(str));
    std::cout << "decoded string is: " << s << std::endl;

    str = "";
    s = encoder.Decode(encoder.Encode(str));
    std::cout << "decoded string is: " << s << std::endl;

    str = "abcdefghijklmnopqrstuwxyz";
    s = encoder.Decode(encoder.Encode(str));
    std::cout << "decoded string is: " << s << std::endl;

    str = "happybirthdayq";
    s = encoder.Decode(encoder.Encode(str));
    std::cout << "decoded string is: " << s << std::endl;

    std::string toEncode = "hello";
    std::vector<char> encodedVect = *encoder.Encode(toEncode);
    std::cout << toEncode << " is encoded as: " << std::endl;
    for(char c : encodedVect)
    {
        std::bitset<8> bit(c);
        std::cout << bit << " ";
    }
    std::cout << std::endl;
    
    toEncode = "goodbye";
    encodedVect = *encoder.Encode(toEncode);
    std::cout << toEncode << " is encoded as: " << std::endl;
    for(char c : encodedVect)
    {
        std::bitset<8> bit(c);
        std::cout << bit << " ";
    }
    std::cout << std::endl;

}